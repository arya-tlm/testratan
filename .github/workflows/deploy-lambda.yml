name: Deploy Lambda Functions

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Get full history for better diff detection

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Get changed Python files
      id: changed-files
      run: |
        # Get list of changed .py files (excluding .github folder)
        if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
          # First push to repository
          changed_files=$(find . -name "*.py" -not -path "./.github/*" -printf "%f\n")
        else
          # Regular push - find changed files
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.py$' | grep -v '.github' | xargs -I {} basename {} || echo "")
        fi
        
        echo "Changed Python files:"
        echo "$changed_files"
        
        # Save to output
        echo "files<<EOF" >> $GITHUB_OUTPUT
        echo "$changed_files" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Deploy changed functions
      run: |
        files="${{ steps.changed-files.outputs.files }}"
        
        if [ -z "$files" ] || [ "$files" = "" ]; then
          echo "‚ÑπÔ∏è No Python files changed - nothing to deploy"
          exit 0
        fi
        
        echo "üöÄ Starting deployment of changed functions..."
        echo ""
        
        # Counter for tracking deployments
        deployed_count=0
        failed_count=0
        
        for file in $files; do
          if [ -f "$file" ]; then
            # Extract function name (remove .py extension)
            function_name=$(basename "$file" .py)
            
            echo "üì¶ Deploying: $function_name (from $file)"
            
            # Create deployment package
            cp "$file" lambda_function.py
            zip -q lambda-deployment.zip lambda_function.py
            
            # Deploy to AWS Lambda
            if aws lambda update-function-code \
              --function-name "$function_name" \
              --zip-file fileb://lambda-deployment.zip > /dev/null 2>&1; then
              echo "‚úÖ SUCCESS: $function_name deployed"
              deployed_count=$((deployed_count + 1))
            else
              echo "‚ùå FAILED: $function_name (function may not exist in AWS)"
              failed_count=$((failed_count + 1))
            fi
            
            # Clean up
            rm -f lambda_function.py lambda-deployment.zip
            echo ""
          fi
        done
        
        echo "üìä DEPLOYMENT SUMMARY:"
        echo "   ‚úÖ Successful: $deployed_count"
        echo "   ‚ùå Failed: $failed_count"
        
        if [ $failed_count -gt 0 ]; then
          echo ""
          echo "üí° Failed deployments may be due to:"
          echo "   - Lambda function doesn't exist in AWS"
          echo "   - Function name mismatch"
          echo "   - Insufficient permissions"
        fi